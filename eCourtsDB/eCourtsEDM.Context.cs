//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace eCourtsDB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NYCOURTSEntities : DbContext
    {
        public NYCOURTSEntities()
            : base("name=NYCOURTSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Appearance> Appearances { get; set; }
        public virtual DbSet<Attorney> Attorneys { get; set; }
        public virtual DbSet<Case> Cases { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<Motion> Motions { get; set; }
        public virtual DbSet<Title> Titles { get; set; }
        public virtual DbSet<GeneralData> GeneralDatas { get; set; }
        public virtual DbSet<RemarkData> RemarkDatas { get; set; }
        public virtual DbSet<vwAppearanceExpanded> vwAppearanceExpandeds { get; set; }
        public virtual DbSet<vwAttorneyExpanded> vwAttorneyExpandeds { get; set; }
        public virtual DbSet<vwCaseExpanded> vwCaseExpandeds { get; set; }
        public virtual DbSet<vwMotionExpanded> vwMotionExpandeds { get; set; }
        public virtual DbSet<vwGeneralDataExpanded> vwGeneralDataExpandeds { get; set; }
        public virtual DbSet<vwCaseByJudgeReliefSought> vwCaseByJudgeReliefSoughts { get; set; }
        public virtual DbSet<vwJudgeReliefSought5NumberSummary> vwJudgeReliefSought5NumberSummary { get; set; }
        public virtual DbSet<vwMotionSummaryByJudgeReliefSought> vwMotionSummaryByJudgeReliefSoughts { get; set; }
        public virtual DbSet<vwMotionSummaryByReliefSought> vwMotionSummaryByReliefSoughts { get; set; }
    
        [DbFunction("NYCOURTSEntities", "tfnGetAllCasesForaProperty")]
        public virtual IQueryable<tfnGetAllCasesForaProperty_Result> tfnGetAllCasesForaProperty(string bBL)
        {
            var bBLParameter = bBL != null ?
                new ObjectParameter("BBL", bBL) :
                new ObjectParameter("BBL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetAllCasesForaProperty_Result>("[NYCOURTSEntities].[tfnGetAllCasesForaProperty](@BBL)", bBLParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetCaseColumnChanges")]
        public virtual IQueryable<tfnGetCaseColumnChanges_Result> tfnGetCaseColumnChanges(string tablename, string columnName, Nullable<System.DateTime> startDateTime, Nullable<System.DateTime> endDateTime)
        {
            var tablenameParameter = tablename != null ?
                new ObjectParameter("Tablename", tablename) :
                new ObjectParameter("Tablename", typeof(string));
    
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            var startDateTimeParameter = startDateTime.HasValue ?
                new ObjectParameter("StartDateTime", startDateTime) :
                new ObjectParameter("StartDateTime", typeof(System.DateTime));
    
            var endDateTimeParameter = endDateTime.HasValue ?
                new ObjectParameter("EndDateTime", endDateTime) :
                new ObjectParameter("EndDateTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetCaseColumnChanges_Result>("[NYCOURTSEntities].[tfnGetCaseColumnChanges](@Tablename, @ColumnName, @StartDateTime, @EndDateTime)", tablenameParameter, columnNameParameter, startDateTimeParameter, endDateTimeParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetCaseUpdates")]
        public virtual IQueryable<tfnGetCaseUpdates_Result> tfnGetCaseUpdates(string countyId, string caseIndexNumber)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var caseIndexNumberParameter = caseIndexNumber != null ?
                new ObjectParameter("CaseIndexNumber", caseIndexNumber) :
                new ObjectParameter("CaseIndexNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetCaseUpdates_Result>("[NYCOURTSEntities].[tfnGetCaseUpdates](@CountyId, @CaseIndexNumber)", countyIdParameter, caseIndexNumberParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetMortgageForeclosureCasesForaProperty")]
        public virtual IQueryable<tfnGetMortgageForeclosureCasesForaProperty_Result> tfnGetMortgageForeclosureCasesForaProperty(string bBL)
        {
            var bBLParameter = bBL != null ?
                new ObjectParameter("BBL", bBL) :
                new ObjectParameter("BBL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetMortgageForeclosureCasesForaProperty_Result>("[NYCOURTSEntities].[tfnGetMortgageForeclosureCasesForaProperty](@BBL)", bBLParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetNewMortgageForeclosureCases")]
        public virtual IQueryable<tfnGetNewMortgageForeclosureCases_Result> tfnGetNewMortgageForeclosureCases(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetNewMortgageForeclosureCases_Result>("[NYCOURTSEntities].[tfnGetNewMortgageForeclosureCases](@StartDate, @EndDate)", startDateParameter, endDateParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetMortgageForeclosureLPsForaProperty")]
        public virtual IQueryable<tfnGetMortgageForeclosureLPsForaProperty_Result> tfnGetMortgageForeclosureLPsForaProperty(string bBL, Nullable<System.DateTime> startDate)
        {
            var bBLParameter = bBL != null ?
                new ObjectParameter("BBL", bBL) :
                new ObjectParameter("BBL", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetMortgageForeclosureLPsForaProperty_Result>("[NYCOURTSEntities].[tfnGetMortgageForeclosureLPsForaProperty](@BBL, @StartDate)", bBLParameter, startDateParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetDocumentExtractForCase")]
        public virtual IQueryable<tfnGetDocumentExtractForCase_Result> tfnGetDocumentExtractForCase(string countyId, string caseIndexNumber)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var caseIndexNumberParameter = caseIndexNumber != null ?
                new ObjectParameter("CaseIndexNumber", caseIndexNumber) :
                new ObjectParameter("CaseIndexNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetDocumentExtractForCase_Result>("[NYCOURTSEntities].[tfnGetDocumentExtractForCase](@CountyId, @CaseIndexNumber)", countyIdParameter, caseIndexNumberParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnActiveLPsForaProperty")]
        public virtual IQueryable<tfnActiveLPsForaProperty_Result> tfnActiveLPsForaProperty(string bBL, Nullable<System.DateTime> startDate)
        {
            var bBLParameter = bBL != null ?
                new ObjectParameter("BBL", bBL) :
                new ObjectParameter("BBL", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnActiveLPsForaProperty_Result>("[NYCOURTSEntities].[tfnActiveLPsForaProperty](@BBL, @StartDate)", bBLParameter, startDateParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetRelatedFirmsForAttorneyOfRecord")]
        public virtual IQueryable<tfnGetRelatedFirmsForAttorneyOfRecord_Result> tfnGetRelatedFirmsForAttorneyOfRecord(string countyId, string attorneyOfRecordId, string partyIndicator, Nullable<bool> sameCountyOnly)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var attorneyOfRecordIdParameter = attorneyOfRecordId != null ?
                new ObjectParameter("AttorneyOfRecordId", attorneyOfRecordId) :
                new ObjectParameter("AttorneyOfRecordId", typeof(string));
    
            var partyIndicatorParameter = partyIndicator != null ?
                new ObjectParameter("PartyIndicator", partyIndicator) :
                new ObjectParameter("PartyIndicator", typeof(string));
    
            var sameCountyOnlyParameter = sameCountyOnly.HasValue ?
                new ObjectParameter("SameCountyOnly", sameCountyOnly) :
                new ObjectParameter("SameCountyOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetRelatedFirmsForAttorneyOfRecord_Result>("[NYCOURTSEntities].[tfnGetRelatedFirmsForAttorneyOfRecord](@CountyId, @AttorneyOfRecordId, @PartyIndicator, @SameCountyOnly)", countyIdParameter, attorneyOfRecordIdParameter, partyIndicatorParameter, sameCountyOnlyParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetJudgesForRelatedFirmsForAttorneyOfRecord")]
        public virtual IQueryable<tfnGetJudgesForRelatedFirmsForAttorneyOfRecord_Result> tfnGetJudgesForRelatedFirmsForAttorneyOfRecord(string countyId, string attorneyOfRecordId, string partyIndicator, Nullable<bool> sameCountyOnly)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var attorneyOfRecordIdParameter = attorneyOfRecordId != null ?
                new ObjectParameter("AttorneyOfRecordId", attorneyOfRecordId) :
                new ObjectParameter("AttorneyOfRecordId", typeof(string));
    
            var partyIndicatorParameter = partyIndicator != null ?
                new ObjectParameter("PartyIndicator", partyIndicator) :
                new ObjectParameter("PartyIndicator", typeof(string));
    
            var sameCountyOnlyParameter = sameCountyOnly.HasValue ?
                new ObjectParameter("SameCountyOnly", sameCountyOnly) :
                new ObjectParameter("SameCountyOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetJudgesForRelatedFirmsForAttorneyOfRecord_Result>("[NYCOURTSEntities].[tfnGetJudgesForRelatedFirmsForAttorneyOfRecord](@CountyId, @AttorneyOfRecordId, @PartyIndicator, @SameCountyOnly)", countyIdParameter, attorneyOfRecordIdParameter, partyIndicatorParameter, sameCountyOnlyParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnGetCasesForRelatedFirmsForAttorneyOfRecord")]
        public virtual IQueryable<tfnGetCasesForRelatedFirmsForAttorneyOfRecord_Result> tfnGetCasesForRelatedFirmsForAttorneyOfRecord(string countyId, string attorneyOfRecordId, string partyIndicator, Nullable<bool> sameCountyOnly, string judgeCountyId, string judgeId)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var attorneyOfRecordIdParameter = attorneyOfRecordId != null ?
                new ObjectParameter("AttorneyOfRecordId", attorneyOfRecordId) :
                new ObjectParameter("AttorneyOfRecordId", typeof(string));
    
            var partyIndicatorParameter = partyIndicator != null ?
                new ObjectParameter("PartyIndicator", partyIndicator) :
                new ObjectParameter("PartyIndicator", typeof(string));
    
            var sameCountyOnlyParameter = sameCountyOnly.HasValue ?
                new ObjectParameter("SameCountyOnly", sameCountyOnly) :
                new ObjectParameter("SameCountyOnly", typeof(bool));
    
            var judgeCountyIdParameter = judgeCountyId != null ?
                new ObjectParameter("JudgeCountyId", judgeCountyId) :
                new ObjectParameter("JudgeCountyId", typeof(string));
    
            var judgeIdParameter = judgeId != null ?
                new ObjectParameter("JudgeId", judgeId) :
                new ObjectParameter("JudgeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetCasesForRelatedFirmsForAttorneyOfRecord_Result>("[NYCOURTSEntities].[tfnGetCasesForRelatedFirmsForAttorneyOfRecord](@CountyId, @AttorneyOfRecordId, @PartyIndicator, @SameCountyOnly, @JudgeCountyId, @JudgeId)", countyIdParameter, attorneyOfRecordIdParameter, partyIndicatorParameter, sameCountyOnlyParameter, judgeCountyIdParameter, judgeIdParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnReliefSoughtDecision5NSForLawFirmAndJudge")]
        public virtual IQueryable<tfnReliefSoughtDecision5NSForLawFirmAndJudge_Result> tfnReliefSoughtDecision5NSForLawFirmAndJudge(string countyId, string attorneyOfRecordId, string partyIndicator, Nullable<bool> sameCountyOnly, string judgeCountyId, string judgeId)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var attorneyOfRecordIdParameter = attorneyOfRecordId != null ?
                new ObjectParameter("AttorneyOfRecordId", attorneyOfRecordId) :
                new ObjectParameter("AttorneyOfRecordId", typeof(string));
    
            var partyIndicatorParameter = partyIndicator != null ?
                new ObjectParameter("PartyIndicator", partyIndicator) :
                new ObjectParameter("PartyIndicator", typeof(string));
    
            var sameCountyOnlyParameter = sameCountyOnly.HasValue ?
                new ObjectParameter("SameCountyOnly", sameCountyOnly) :
                new ObjectParameter("SameCountyOnly", typeof(bool));
    
            var judgeCountyIdParameter = judgeCountyId != null ?
                new ObjectParameter("JudgeCountyId", judgeCountyId) :
                new ObjectParameter("JudgeCountyId", typeof(string));
    
            var judgeIdParameter = judgeId != null ?
                new ObjectParameter("JudgeId", judgeId) :
                new ObjectParameter("JudgeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnReliefSoughtDecision5NSForLawFirmAndJudge_Result>("[NYCOURTSEntities].[tfnReliefSoughtDecision5NSForLawFirmAndJudge](@CountyId, @AttorneyOfRecordId, @PartyIndicator, @SameCountyOnly, @JudgeCountyId, @JudgeId)", countyIdParameter, attorneyOfRecordIdParameter, partyIndicatorParameter, sameCountyOnlyParameter, judgeCountyIdParameter, judgeIdParameter);
        }
    
        [DbFunction("NYCOURTSEntities", "tfnCaseCompletionDecision5NSForLawFirmAndJudge")]
        public virtual IQueryable<tfnCaseCompletionDecision5NSForLawFirmAndJudge_Result> tfnCaseCompletionDecision5NSForLawFirmAndJudge(string countyId, string attorneyOfRecordId, Nullable<bool> sameCountyOnly, string judgeCountyId, string judgeId)
        {
            var countyIdParameter = countyId != null ?
                new ObjectParameter("CountyId", countyId) :
                new ObjectParameter("CountyId", typeof(string));
    
            var attorneyOfRecordIdParameter = attorneyOfRecordId != null ?
                new ObjectParameter("AttorneyOfRecordId", attorneyOfRecordId) :
                new ObjectParameter("AttorneyOfRecordId", typeof(string));
    
            var sameCountyOnlyParameter = sameCountyOnly.HasValue ?
                new ObjectParameter("SameCountyOnly", sameCountyOnly) :
                new ObjectParameter("SameCountyOnly", typeof(bool));
    
            var judgeCountyIdParameter = judgeCountyId != null ?
                new ObjectParameter("JudgeCountyId", judgeCountyId) :
                new ObjectParameter("JudgeCountyId", typeof(string));
    
            var judgeIdParameter = judgeId != null ?
                new ObjectParameter("JudgeId", judgeId) :
                new ObjectParameter("JudgeId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnCaseCompletionDecision5NSForLawFirmAndJudge_Result>("[NYCOURTSEntities].[tfnCaseCompletionDecision5NSForLawFirmAndJudge](@CountyId, @AttorneyOfRecordId, @SameCountyOnly, @JudgeCountyId, @JudgeId)", countyIdParameter, attorneyOfRecordIdParameter, sameCountyOnlyParameter, judgeCountyIdParameter, judgeIdParameter);
        }
    }
}
