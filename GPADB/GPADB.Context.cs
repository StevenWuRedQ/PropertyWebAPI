//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GPADB
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class GPADBEntities : DbContext
    {
        public GPADBEntities()
            : base("name=GPADBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<vwGeneralLeadInfomation> vwGeneralLeadInfomations { get; set; }
    
        [DbFunction("GPADBEntities", "tfnGetPropertyLeads")]
        public virtual IQueryable<tfnGetPropertyLeads_Result> tfnGetPropertyLeads(string zipCodes)
        {
            var zipCodesParameter = zipCodes != null ?
                new ObjectParameter("ZipCodes", zipCodes) :
                new ObjectParameter("ZipCodes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<tfnGetPropertyLeads_Result>("[GPADBEntities].[tfnGetPropertyLeads](@ZipCodes)", zipCodesParameter);
        }
    
        public virtual ObjectResult<vwGeneralLeadInfomation> GetLeads(string zipCodes, string buildingClassCodes, string borough, string vacant, string mailingAddressActive)
        {
            var zipCodesParameter = zipCodes != null ?
                new ObjectParameter("ZipCodes", zipCodes) :
                new ObjectParameter("ZipCodes", typeof(string));
    
            var buildingClassCodesParameter = buildingClassCodes != null ?
                new ObjectParameter("BuildingClassCodes", buildingClassCodes) :
                new ObjectParameter("BuildingClassCodes", typeof(string));
    
            var boroughParameter = borough != null ?
                new ObjectParameter("Borough", borough) :
                new ObjectParameter("Borough", typeof(string));
    
            var vacantParameter = vacant != null ?
                new ObjectParameter("Vacant", vacant) :
                new ObjectParameter("Vacant", typeof(string));
    
            var mailingAddressActiveParameter = mailingAddressActive != null ?
                new ObjectParameter("MailingAddressActive", mailingAddressActive) :
                new ObjectParameter("MailingAddressActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwGeneralLeadInfomation>("GetLeads", zipCodesParameter, buildingClassCodesParameter, boroughParameter, vacantParameter, mailingAddressActiveParameter);
        }
    
        public virtual ObjectResult<vwGeneralLeadInfomation> GetLeads(string zipCodes, string buildingClassCodes, string borough, string vacant, string mailingAddressActive, MergeOption mergeOption)
        {
            var zipCodesParameter = zipCodes != null ?
                new ObjectParameter("ZipCodes", zipCodes) :
                new ObjectParameter("ZipCodes", typeof(string));
    
            var buildingClassCodesParameter = buildingClassCodes != null ?
                new ObjectParameter("BuildingClassCodes", buildingClassCodes) :
                new ObjectParameter("BuildingClassCodes", typeof(string));
    
            var boroughParameter = borough != null ?
                new ObjectParameter("Borough", borough) :
                new ObjectParameter("Borough", typeof(string));
    
            var vacantParameter = vacant != null ?
                new ObjectParameter("Vacant", vacant) :
                new ObjectParameter("Vacant", typeof(string));
    
            var mailingAddressActiveParameter = mailingAddressActive != null ?
                new ObjectParameter("MailingAddressActive", mailingAddressActive) :
                new ObjectParameter("MailingAddressActive", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<vwGeneralLeadInfomation>("GetLeads", mergeOption, zipCodesParameter, buildingClassCodesParameter, boroughParameter, vacantParameter, mailingAddressActiveParameter);
        }
    }
}
